<%- include('partials/header') %>

<section id="profile" class="profile section">
    <div class="container section-title" data-aos="fade-up">
      <h2>Profile</h2>
      <%- include('partials/submenu') %>
    </div>
    <div class="container" data-aos="fade-up" data-aos-delay="100">
      <form id="profileForm" enctype="multipart/form-data">
        <div class="row gy-4">
          <div class="col-lg-6 offset-3">
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="name" name="name">
            </div>
            <div class="mb-3">
              <label for="gender" class="form-label">Gender</label>
              <select id="gender" class="form-select" name="gender">
                <option value="male">Male</option>
                <option value="female">Female</option>
                <option value="other">Other</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="email" class="form-control" id="email" name="email">
            </div>
            <div class="mb-3">
              <button type="submit" class="btn btn-primary">Update Profile</button>
            </div>
          </div>
        </div>
      </form>
      
    </div>
</section>
<script>
document.addEventListener('DOMContentLoaded', async () => {
  await TokenCheck();
  await populateProfileForm();

  document.getElementById('profileForm').addEventListener('submit', async (event) => {
    event.preventDefault();

    const token = localStorage.getItem('jwtToken');
    const form = document.getElementById('profileForm');
    const formData = new FormData(form);

    // Convert FormData to a plain JavaScript object
    const formObject = {};
    formData.forEach((value, key) => {
      formObject[key] = value;
    });

    try {
      const response = await fetch('/api/user/profile-update', {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': token
        },
        body: JSON.stringify(formObject)  // Send the object as JSON
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || 'Failed to update profile');
      }

      showToast('Profile updated successfully!', 'success');
      await populateProfileForm(); // Refresh profile data
    } catch (error) {
      showToast(error.message, 'danger');
    }
  });
});

async function populateProfileForm() {
  const token = localStorage.getItem('jwtToken');
  try {
    const response = await fetch('/api/user/profile', {
      method: 'GET',
      headers: {
        'Authorization': token
      }
    });

    if (!response.ok) {
      throw new Error('Failed to fetch profile data');
    }

    const data = await response.json();

    document.getElementById('name').value = data.name || '';
    document.getElementById('gender').value = data.gender || 'other';
    document.getElementById('email').value = data.email || '';
  } catch (error) {
    showToast(error.message, 'danger');
  }
}

</script>
<%- include('partials/footer') %>
